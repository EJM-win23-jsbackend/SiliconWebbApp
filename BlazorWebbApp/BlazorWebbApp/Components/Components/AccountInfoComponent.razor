
@attribute [StreamRendering] 

@using BlazorWebbApp.Data
@using BlazorWebbApp.Models
@using BlazorWebbApp.Services
@using Microsoft.AspNetCore.Identity

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject AuthenticationStateProvider AuthenticationState
@inject ProfileImageServices _fileUplaod

@rendermode InteractiveServer

 @if (user == null)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <AuthorizeView>
        <Authorized>
            <div class="profile">
                <div class="content">
                    <div class="btnAndimageContainer">
                        <div class="imageContainer">
                            @if (profileImage != null)
                            {
                                <img src="@profileImage" alt="profile image">
                            }
                            else
                            {
                                <img src="./images/profileimage.svg" alt="profile image">
                            }
                        </div>
                        <div class="circle">
                            <InputFile OnChange="HandleFileSelected" class="input-file" id="fileInput" />
                                <label for="fileInput" type="button" class="innerCircle">
                                    <svg width="18" height="12" viewBox="0 0 18 12" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M7.33317 5.16678H4.91734C4.91734 5.16428 4.91734 5.16178 4.91817 5.15928C4.97234 4.89345 5.054 4.63095 5.16067 4.37845C5.26567 4.13095 5.39484 3.89262 5.54484 3.67012C5.69317 3.45012 5.86484 3.24262 6.05317 3.05345C6.24234 2.86512 6.44984 2.69345 6.6715 2.54428C6.89317 2.39428 7.13067 2.26595 7.37817 2.16095C7.62984 2.05428 7.89234 1.97262 8.15984 1.91845C8.70817 1.80595 9.29067 1.80595 9.8415 1.91845C10.1065 1.97262 10.3698 2.05428 10.6223 2.16095C10.869 2.26512 11.1065 2.39512 11.3307 2.54512C11.5523 2.69428 11.759 2.86512 11.9457 3.05262L13.1257 1.87595C12.864 1.61262 12.5723 1.37262 12.2623 1.16345C11.9515 0.95345 11.6182 0.771784 11.2723 0.625117C10.9182 0.475117 10.549 0.360951 10.1765 0.285117C9.40734 0.127617 8.594 0.127617 7.82734 0.285117C7.45317 0.361784 7.084 0.47595 6.73067 0.62595C6.3815 0.772617 6.04817 0.95345 5.73817 1.16345C5.42984 1.37095 5.13984 1.61095 4.87484 1.87512C4.60984 2.13928 4.37067 2.43012 4.164 2.73762C3.954 3.04845 3.77234 3.38178 3.62567 3.72928C3.47567 4.08262 3.3615 4.45178 3.28567 4.82512C3.26234 4.93762 3.24984 5.05262 3.23317 5.16678H0.666504L3.99984 8.50012L7.33317 5.16678ZM10.6665 6.83345H13.0823C13.0815 6.83595 13.0823 6.83845 13.0815 6.84012C13.0265 7.11012 12.9448 7.37262 12.8382 7.62178C12.7357 7.86595 12.6065 8.10428 12.4557 8.32845C12.3065 8.54845 12.1348 8.75678 11.9448 8.94678C11.7573 9.13428 11.5507 9.30512 11.329 9.45512C11.1057 9.60512 10.8682 9.73428 10.6215 9.83928C10.369 9.94595 10.1065 10.0276 9.83984 10.0818C9.29234 10.1943 8.709 10.1943 8.159 10.0818C7.89317 10.0276 7.63067 9.94595 7.37817 9.83928C7.13067 9.73428 6.89234 9.60512 6.66984 9.45512C6.44984 9.30678 6.24234 9.13512 6.05317 8.94678L4.87484 10.1251C5.139 10.3893 5.42984 10.6293 5.73734 10.8368C6.04817 11.0468 6.3815 11.2285 6.729 11.3751C7.08234 11.5251 7.4515 11.6393 7.82484 11.7151C8.209 11.7935 8.604 11.8335 8.99984 11.8335C9.39567 11.8335 9.79067 11.7935 10.1732 11.7151C10.5473 11.6393 10.9173 11.5243 11.2707 11.3743C11.6165 11.2276 11.9498 11.0468 12.2607 10.8368C12.5707 10.6276 12.8623 10.3868 13.1232 10.1251C13.3873 9.86095 13.6273 9.57012 13.8357 9.26095C14.0473 8.94678 14.229 8.61345 14.3732 8.27178C14.5215 7.92178 14.6357 7.55262 14.7132 7.17512C14.7357 7.06262 14.749 6.94762 14.7657 6.83345H17.3332L13.9998 3.50012L10.6665 6.83345Z" fill="#33354D" />
                                    </svg>
                                </label>
                        </div>

                    </div>

                    <h5>@user.FirstName @user.LastName</h5>
                    <p>@user.Email</p>
                </div>
            </div>
        </Authorized>
    </AuthorizeView>
}

@code {

    private ApplicationUser? user;

    private string? profileImage { get; set; }

    [SupplyParameterFromForm]
    private FileUploadModel FileUploadForm { get; set; } = new();

    private IBrowserFile? selectedFile;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(1000);
        var authState = await AuthenticationState.GetAuthenticationStateAsync();
        var userPrincipal = authState.User;

        if (userPrincipal.Identity != null && userPrincipal.Identity.IsAuthenticated)
        {
            user = await UserManager.GetUserAsync(userPrincipal);

            profileImage = await GetProfileImageAsync();
        }
    }

    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        string userId = user.Id;
        selectedFile = e.File;
        var stream = new MemoryStream();
        await selectedFile.OpenReadStream().CopyToAsync(stream);
        stream.Position = 0; // Återställ strömmen till början
        var result = await _fileUplaod.UploadProfileImageAsync(selectedFile, userId);

        stream.Dispose(); // Stäng streamen när den inte längre behövs
    }

    private async Task<string> GetProfileImageAsync()
    {
        string userId = user.Id;
        var profileImage = await _fileUplaod.DownloadProfileImageAsync(userId);
        return profileImage;
    }
}